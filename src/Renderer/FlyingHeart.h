#pragma once
#include "Devices/LEDMatrixDisplay/Hub75DMA.h"

static const uint8_t PROGMEM heartBM3x3[] = {
    0xff, 0x00, 0xff,
    0xff, 0xff, 0xff,
    0x00, 0xff, 0x00};

static const uint8_t PROGMEM heartBM5x5[] = {
    0x00, 0xff, 0x00, 0xff, 0x00,
    0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff,
    0x00, 0xff, 0xff, 0xff, 0x00,
    0x00, 0x00, 0xff, 0x00, 0x00};

static const uint8_t PROGMEM heartBM7x7[] = {
    0x00, 0xff, 0xff, 0x00, 0xff, 0xff, 0x00,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00,
    0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00};

class FlyingHeart {
   public:
    FlyingHeart(Hub75DMA* displayPtr = nullptr);

    void renderHeart();
    void reset();
    void resetAll();
    void setSpeed(float speed);

   private:
    Hub75DMA* display;
    enum HeartSize { SIZE_3x3, SIZE_5x5, SIZE_7x7 };
    struct Heart {
        float xpos, ypos;
        float velocityx, velocityy;
        HeartSize size;
    };
    short setIndex = 0;
    static const short numSets = 3, numHeart = 23, sumHeart = numSets * numHeart;
    Heart Hearts[sumHeart];
    volatile unsigned long heartSpeed = 0;
    float speedModifier = 0.5;

    HeartSize getRandomHeartSize();
    void drawHeart(int offsetX, int offsetY, HeartSize size);
    void moveHeart(int i);
};
